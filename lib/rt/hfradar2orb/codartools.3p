.TH CODARTOOLS 3P "$Date: 2006/10/18 21:51:58 $"
.SH NAME
codartools \- Tools to handle CODAR ocean surface-current data
.SH SYNOPSIS
.nf
use codartools;

$rc = codartools::is_valid_lluv( @datablock );

$rc = codartools::rbtimestamps_ok( $filename, @datablock );

@outblock = codartools::rb2lluv( $pattern, $site, @inblock );

$codartools::Verbose;
$codartools::$codeVersion;
$codartools::$processedBy;
$codartools::$greatCircle;
$codartools::$geodVersion;

.fi
.SH DESCRIPTION
These routines provide several utilities to verify and convert high-frequency 
radar ocean current monitoring data.

The \fBis_valid_lluv\fP routine verifies that the contents of the given CODAR
format LLUV file, passed in as a data block consisting of the lines of the file,
are complete with regard to the radial data and that minimum metadata 
requirements are met.  The required metadata items and contents include: 	
.nf

	FileType        (LLUV rdls)						
	Site            (4-char site name)					
	TimeStamp       (yyyy mm dd HH MM SS)					
	TimeZone        (required to be GMT or UTC)				
	Origin          (-90 >= lat <= 90 & -180 >= lon <= 180)			
	PatternType     (3+ characters)						

.fi

The data samples themselves are checked by verifying that the
TableColumns keywords for the 'LLUV RDL*' TableType match the actual
number of data columns. Rows are not checked against the TableRows key
in the case that the file has been edited and the key hasn't been
updated.

The \fBrbtimestamps_ok\fP routine compares the time value encoded in a 
CODAR filename with the time value embedded in a block of data from a 
range-bin data file. If the two are equivalent, it returns 1; otherwise 
it returns 0. 

The \fBrb2lluv\fP function converts a CODAR format radial file from 
range-bin format to CODAR LLUV format. The input arguments are a patterntype
code \fI$pattern\fP (usually \fIs\fP or \fIz\fP, a \fIsite\fP name, 
and an array containing the lines of the input file (without any line-feeds 
or newlines). The output of the routine is an array containing the converted
lines, without any newlines. The \fBrb2lluv\fP function checks to ensure a 
minimum of metadata has	has been obtained before proceeding with writing the
LLUV file.  Minimum metadata requirements are Site, TimeStamp, Origin and 
PatternType.		

If the \fB$codartools::Verbose\fP value is set to 1, the routines will 
call the Antelope elog_notify(3) function with extra information about the 
processing. The parameters 
.nf

\fB$codartools::$codeVersion\fP;
\fB$codartools::$processedBy\fP;
\fB$codartools::$greatCircle\fP;
\fB$codartools::$geodVersion\fP;

.fi
are used internally by \fBcodartools.pm\fP, however they are made available 
for printing and/or modification by the calling routines. 
									
.SH OPTIONS
.SH FILES
.SH ENVIRONMENT
.SH PARAMETER FILE
.SH EXAMPLE
.in 2c
.ft CW
.nf
.fi
.ft R
.in
.SH RETURN VALUES
The subroutine \fBis_valid_lluv\fP returns 1 if the data block is considered 
valid LLUV data, and 0 if the data are corrupt or the metadata don't meet the 
requirements.		

The subroutine \fBrbtimestamps_ok\fP returns 1 if the filename and data-block
timestamps match; 0 if they don't. 

The subroutine \fBrb2lluv\fP returns a valid block of lluv data if 
conversion succeeds, or undef if it fails (in which case errors will be 
logged through the Antelope elog(1) facility).

.SH LIBRARY
.SH ATTRIBUTES
.SH DIAGNOSTICS
.SH "SEE ALSO"
.nf
convert_rb2lluv(1), hfradar2orb(3p), hfradar2orb(1), 
Geo::Ellipsoid(3)
.fi
.SH "BUGS AND CAVEATS"

Currently, only GMT/UTC timezones (or no timezone) are handled by the
rb2lluv subroutine.  This is because (1) other timezones haven't been
encountered and (2) would need to first establish a hash of timezones and GMT
offsets as well as determine if daylight savings is in effect for the given
time. The conversion is aborted if a timezone other than UTC/GMT is
encountered by rb2lluv.

The LLUV datablock created is based on the Codar Table Format File Format
Specification Version 1.00 dated Feb 20, 2005 and the SeaSonde 10 LonLatUV
(LLUV) file format version 1.02 dated Jan 11, 2006. The GeodVersion 'PGEO'
(Perl GEOdesic) has been registerd with CODAR as well as the
\fIcodar_rb2lluv.pl\fP Processing tool (although the latter has now been
recoded as \fBcodartools.pm\fP...).

The RangeStart keyword forced to '1', regardless of the first bin in
the range-bin file.  This is the convention currently used by CODAR.

The ReferenceBearing keyword is always zero when written to lluv since
any reference bearing in the range-bin file is taken into account for the 
bearings reported.

The RadSmoothing value reported in the range-bin file isn't propagated
to a keyword in the lluv format because it isn't yet in use (always 0) and
its formatting in the lluv format isn't clear yet.  Presumably, users
providing files in range-bin format with this keyword could alternatively
provide the same data in lluv format since this keyword is relatively new.

Standard deviation values from range-bin files will always appear in
column 6, regardless of the column label (Spatial Quality).  Until recently,
standard deviations reported in range-bin files corresponded to Temporal
Quality but this has recently changed.  Exact dates on this change aren't
available and aren't necessairly tied to the data timestamp since it depends
on the code versions used to process the data.

Column 7, Temporal Quality, is always 999.0 (bad value) and the maximum
and minimum velocities reported in columns are always equal to the velocity.
This follows the current convention used by CODAR.

.SH AUTHOR
.nf
Mark Otero 
Marine Physics Laboratory
University of California, San Diego
motero@mpl.ucsd.edu

and

Kent Lindquist
Lindquist Consulting
kent@lindquistconsulting.com

This code has been developed in support of the HF-Radar National
Network and the state of California's Coastal Ocean Currents
Monitoring Program (COCMP).
										
Please email motero@mpl.ucsd.edu to report any bugs.
Include sample radial files and describe the problem observed.

.fi
.\" $Id: codartools.3p,v 1.5 2006/10/18 21:51:58 lindquis Exp $
