
#   Copyright (c) 2005 Lindquist Consulting, Inc.
#   All rights reserved. 
#                                                                     
#   Written by Dr. Kent Lindquist, Lindquist Consulting, Inc. 
# 
#   This software may be used freely in any way as long as 
#   the copyright statement above is not removed. 

use Datascope;
use CGI;
require "getopts.pl";
require "dbgmtgrid.pl";
use POSIX qw(ceil floor);

sub print_image {

	print $query->header('image/jpg');
	$path_info = $query->path_info;
	$imagepath = $path_info;
	$imagepath =~ s@.*/image/@@;

	if( length( $imagepath ) > 100 ) {
		die( "Image path is too long" );
	}

	if( $imagepath !~ /^dbgmtgrid_\d+_\d+_\d+$/ ) {
		die( "Imagepath doesn't match expected path pattern" );
	}

	$imagepath = "$work_dir/$imagepath.jpg";

	if( ! -e "$imagepath" ) {
		die( "Couldnt find image file" );
	}

	$size = (stat("$imagepath"))[7];
	open( J, "$imagepath" );
	read J,$slurp,$size;
	close( J );
	print $slurp;
}

$query = new CGI;

$TITLE="Data-Grid Server Proof-of-concept";

$pfname = "demo_topography_server_cgi";

$griddb = pfget( $pfname, "griddb"  );
$gmt_path = pfget( $pfname, "gmt_path" );
$pix_converter = pfget( $pfname, "pix_converter" );
$cptfile = pfget( $pfname, "cptfile" );
$work_dir = pfget( $pfname, "work_dir" );
$max_range = pfget( $pfname, "max_range" );
$image_width = pfget( $pfname, "image_width" );
$ENV{GS_LIB} = pfget( $pfname, "GS_LIB" );
$ENV{GS_FONTPATH} = pfget( $pfname, "GS_FONTPATH" );

$ENV{PATH} = "/usr/bin:$gmt_path:$ENV{ANTELOPE}/bin";
$ENV{PFPATH} = $ENV{ANTELOPE} . "/data/pf";
$ENV{HOME} = "$work_dir";

$filebase = uniq_tempfile();
$psfile = "$work_dir/$filebase.ps";
$jpgfile = "$work_dir/$filebase.jpg";

chdir( $work_dir ) || die( "failed to chdir to $work_dir!\n" );

system( "$gmt_path/gmtset", "MEASURE_UNIT", "inch" );

$path_info = $query->path_info;

if( $path_info =~ /image/ ) {

	&print_image if $path_info=~/image/;

    	exit 0;
}

print $query->header;
print $query->start_html($TITLE);

$script_name = $query->script_name;

print "<html><head><title>$TITLE</title></head>\n";

print $query->startform();

print "<center>\n";
print "<table><tr><td>latitude of map center:</td><td>", $query->textfield('latc'), "</td></tr>\n";
print "<tr><td>longitude of map center:</td><td>", $query->textfield('lonc'), "</td></tr>\n";
print "<tr><td>radial degrees from center to edge:</td><td>", $query->textfield('range'), "</td></tr></table>\n";

print  $query->submit, "<br/>\n";

print $query->endform;

unless ($query->param) {
	print "<b>No query submitted yet.</b>";
	print "</center>\n";
	print $query->end_html;
	exit 0;
}

unless ( $query->param(lonc) =~ /^-?[0-9.]+$/ &&
   	 $query->param(latc) =~ /^-?[0-9.]+$/ &&
   	 $query->param(range) =~ /^[0-9.]+$/ ) {

	print "Malformed query";
	print "</center>\n";
	print $query->end_html;
	exit 0;
}

unless ( $query->param(range) <= $max_range ) {
		
	print "Your query exceeds the maximum allowed range " .
	      "of $max_range degrees.\n";
	print "</center>\n";
	print $query->end_html;
	exit 0;
}

unless( $query->param(lonc) > -180 && $query->param(lonc) < 180 ) {

	print "Invalid longitude value of " . 
		$query->param(lonc) . "; must be between -180 and " .
		"180 degrees\n";
	print "</center>\n";
	print $query->end_html;
	exit 0;
}

unless( $query->param(latc) > -90 && $query->param(latc) < 90 ) {

	print "Invalid longitude value of " . 
		$query->param(latc) . "; must be between -90 and " .
		"90 degrees\n";
	print "</center>\n";
	print $query->end_html;
	exit 0;
}

print "<H1>Topography map</H1>\n";

$center = $query->param(lonc) . ":" . $query->param(latc);
$range = $query->param(range);
print "<h2>Here is a map covering $range degrees centered at ".
      "<EM>$center</EM></h2>";

@cmd = ( "$ENV{ANTELOPE}/bin/make_dbrecenteqs_map", 
	 	"-c", "$center", "-r", "$range", "$psfile" );

system( @cmd );

$cmd = "$pix_converter $psfile $jpgfile";
@cmd = split( /\s+/, $cmd );
system( @cmd );

print "<img width=$image_width src=\"$script_name/image/$filebase\"/>";

print "</center>\n";
print $query->end_html;

exit 0;
