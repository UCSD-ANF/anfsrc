push( @INC, "." ); # KGL SCAFFOLD something of a hack for cgi-lib.pl
require 'cgi-lib.pl';

use orb;
use Datascope;
use Socket;

$ENV{PFPATH} = "$ENV{ANTELOPE}/data/pf:.";
$Pf = "orbtopo";

$q=pfget( $Pf, "registrydbdirs" );
@registrydbdirs=split /\|/, $q;
$registrydbdirprefix= pfget( $Pf, "registrydbdirprefix" );
$dot= pfget( $Pf, "dot" );
$web_tempdir_filesystem= pfget( $Pf, "web_tempdir_filesystem" );
$web_tempdir_relative= pfget( $Pf, "web_tempdir_relative" );
$incompleteorbcolor= pfget( $Pf, "incompleteorbcolor" );
$orbcolor= pfget( $Pf, "orbcolor" );
$orb2orbcolor= pfget( $Pf, "orb2orbcolor" );
$orb2clientcolor= pfget( $Pf, "orb2clientcolor" );
$orb2dbcolor= pfget( $Pf, "orb2dbcolor" );
$orbshape = pfget($Pf, "orbshape");
$orbbad= pfget( $Pf, "orbbad" );
$orbgood= pfget( $Pf, "orbgood" );
$match="";
&ReadParse;

%matchhash;

if (defined $in{"registrydb"})
{
    $registrydb=$in{"registrydb"};
    $registrydb_extern="$registrydb";
    $registrydb="$registrydbdirprefix/$registrydb";
    $j=`$ENV{ANTELOPE}/bin/dbselect $registrydb.grid griddescrip`;
    chomp($j);
    $j=~s/\s+$//;
    if ($j eq "")
    {
	$j=$registrydb;
    }
    $registryname=$j;
}
else
{
    foreach $d (@registrydbdirs)
    {
	$d=~s/^\s+//;
	$d=~s/\s+$//;
        foreach $file (`/bin/ls $registrydbdirprefix/$d/`)
        {
            open(file2,"$registrydbdirprefix/$d/$file");
            if (-f file2)
            {
		@s=`head -3 $registrydbdirprefix/$d/$file`;
		if ($s[1] =~ /^schema\s+registry1.2/)
		{
		    chomp($file);
		    $a="/";
		    push(@l,"$d$a$file");
		}
            }
            close(file2);
        }
    }
    
    print "Content-type: text/html\nPragma: no-cache\n\n";
    print "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n";
    print "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n" ;
    print "<head>\n\t<title>ORB Topo</title>\n" ;
    print "<style type=\"text/css\" media=\"all\">@import \"orbtopo_style.css\";</style>" ;
    print "<link rel=\"alternate stylesheet\" type=\"text/css\" href=\"orbtopo_style.css\" title=\"due\" media=\"screen\" />" ;
    print "</head>\n\n<body>\n\n";

    print "<div id=\"content\">\n" ;
    print "\t<div id=\"banner\" style=\"text-align: right;\">" ;
    print "\t\t<a href=\"http://roadnet.ucsd.edu/\"><img src=\"header.jpg\" alt=\"Header Image\" border=\"0\" /></a>" ;
    print "\t</div>" ;
    print "<h1>ORB Topology Display</h1>" ;

    print "<a href=\"http://roadnet.ucsd.edu/\"><img src=\"http://roadnet.ucsd.edu/images/sub-sidebar_r13_c1.jpg\" width=\"156\" height=\"103\" border=\"0\"></a>\n<ul>\n";


    foreach $i (@l)
    {
	$j=$i;
	$j=`$ENV{ANTELOPE}/bin/dbselect $registrydbdirprefix/$j.grid griddescrip`;
	chomp($j);
	if ($j eq "")
	{
	    $j=$i;
	}
	print "<li><a href=\"orbtopo.cgi?registrydb=$i\">$j</a>$g</li>\n";
    }
    print "</ul>\n<br/>\n<br/>\n<p>&lt;<a href=\"http://roadnet.ucsd.edu/\">ROADNet Home</a>&gt;</p>\n";
    print "</div></body>\n</html>" ;
    exit(0);
}

if (defined $in{"match"})
{
    $match=$in{"match"};
    $match =~ s/\%2F/\//g;
    $match =~ s/\%5C/\\/g;
    $match =~ s/\\\//\//g;
    $match2=$match;
    $match =~ s/\//\\\//g;

    foreach $i (`$ENV{ANTELOPE}/bin/dbsubset $registrydb.sources "srcname=~/$match/" | $ENV{ANTELOPE}/bin/dbselect - serveraddress serverport nbytes`)
    { 
        my ($serveraddress,$serverport,$nbytes)=split /\s+/, $i;
	if (defined $matchhash{"$serveraddress:$serverport"})
	{
	    $matchhash{"$serveraddress:$serverport"}++;
	    $matchbytes{"$serveraddress:$serverport"}+=$nbytes;
	}
	else
	{
	    $matchhash{"$serveraddress:$serverport"}=1;
	    $matchbytes{"$serveraddress:$serverport"}=$nbytes;
	}
	    
    }
}

$twin=now()-6*60*60;

foreach $i (`$ENV{ANTELOPE}/bin/dbsubset $registrydb.connections "when >= '$twin'" | $ENV{ANTELOPE}/bin/dbjoin - $registrydb.clients | $ENV{ANTELOPE}/bin/dbselect - fromaddress fromport toaddress toport latency_sec`)
{
    ($fromaddress,$fromport,$toaddress,$toport,$latency)=split /\s+/, $i;
    ($fromaddresso,$fromporto,$toaddresso,$toporto,$latencyo)=split /\s+/, $i;

    $srcnameip=$fromaddress;
    $srcnameip=inet_aton($srcnameip);
    $srcnameip=gethostbyaddr($srcnameip, AF_INET);
    if ($srcnameip ne "")
    { $fromaddress=$srcnameip; }

    $srcnameip=$toaddress;
    $srcnameip=inet_aton($srcnameip);
    $srcnameip=gethostbyaddr($srcnameip, AF_INET);
    if ($srcnameip ne "")
    { $toaddress=$srcnameip; }

    foreach $portname (`egrep \"\s*$fromport\s*\" $ENV{ANTELOPE}/data/pf/orbserver_names.pf`)
    {
	if ($portname =~ /\s+$fromport\s+/)
	{
	    ($fromport,$mold)=split /\s+/,$portname;
	}
    }

    foreach $portname (`egrep \"\s*$toport\s*\" $ENV{ANTELOPE}/data/pf/orbserver_names.pf`)
    {
	if ($portname =~ /\s+$toport\s+/)
	{
	    ($toport,$mold)=split /\s+/,$portname;
	}
    }

    $hosts{"$fromaddress:$fromport"}="$fromaddresso:$fromporto";
    $hosts{"$toaddress:$toport"}="$toaddresso:$toporto";
    $latency=strtdelta($latency);
    if ($match ne "")
    {
	$conn{"$fromaddress:$fromport->$toaddress:$toport"}="\"$fromaddress:$fromport\" -> \"$toaddress:$toport\" [color=$orb2orbcolor, label=\"orb2orb\" href=\"orbtopo_detail.cgi?mode=connection&registrydb=$registrydb_extern&src=$fromaddress:$fromport&dest=$toaddress:$toport&match=$match\"]";
    }
    else
    {
	$conn{"$fromaddress:$fromport->$toaddress:$toport"}="\"$fromaddress:$fromport\" -> \"$toaddress:$toport\" [color=$orb2orbcolor, label=\"$latency\" href=\"orbtopo_detail.cgi?mode=connection&registrydb=$registrydb_extern&src=$fromaddress:$fromport&dest=$toaddress:$toport&match=$match\"]";	
    }
}

#open(FOO,">/dev/stdout");
#syswrite FOO, "Content-type: image/gif\nPragma: no-cache\n\n";
#syswrite FOO, "Content-type: text/html\nPragma: no-cache\n\n";
#close(FOO);

open(FOO,"> /var/Web/tmp/orbtopo.$$.dot");
print FOO "Digraph orbtopo {\n";
foreach $i (keys %hosts)
{
    ($ip,$port)=split /:/,$hosts{$i};
    if (defined $matchhash{"$ip:$port"})
    {
	$cnt=$matchhash{"$ip:$port"};
	if ($cnt>1)
	{
	    $cnt="$cnt srcs matches $match2";
	}
	else
	{
	    $cnt="$cnt src matches $match2";
	}
	$f=sprintf("\\nusing %.2f MB", $matchbytes{"$ip:$port"}/1024.0/1024.0);
	
	print FOO "\t\"$i\" [shape=$orbshape,style=filled,fillcolor=$orbgood, label=\"$i\\n$cnt$f\", href=\"orbtopo_detail.cgi?mode=orb&orbname=$ip:$port&match=$match&registrydb=$registrydb_extern\"]\n";
    }
    else
    {
	$v=`$ENV{ANTELOPE}/bin/dbsubset $registrydb.servers "serveraddress=='$ip' && serverport=='$port' && when >= '$twin'" | $ENV{ANTELOPE}/bin/dbselect - maxdata`;
	chomp($v);
	if ($v>0)
	{
	    $f=sprintf("\\n%.2f MB Capacity", $v/1024.0/1024.0);
	    $color=$orbcolor;
	    $url=", href=\"orbtopo_detail.cgi?mode=orb&orbname=$ip:$port&match=$match&registrydb=$registrydb_extern\"";
	}
	else
	{
	    $f="";
	    $color=$incompleteorbcolor;
	    $url="";
	}	
	print FOO "\t\"$i\" [shape=$orbshape,style=filled,fillcolor=$color, label=\"$i$f\"$url]\n";
    }
}
foreach $i (keys %conn)
{
    print FOO "\t";
    print FOO $conn{$i};
    print FOO "\n";
}
print FOO "}\n";
close(FOO);
`$dot -Tpng -o $web_tempdir_filesystem/orbtopo.$$.png /var/Web/tmp/orbtopo.$$.dot 2>/dev/null`;
$map=`$dot -Tcmapx -o /dev/stdout /var/Web/tmp/orbtopo.$$.dot 2>/dev/null`;
print "Content-type: text/html\nPragma: no-cache\n\n";
print "<HTML><HEAD><TITLE>ORB Topo $match2 for $registryname</TITLE></HEAD>\n<BODY BGCOLOR=FFFFFF>";
if ($match ne "")
{
    print "<TABLE WIDTH=100%><TR><TD WIDTH=100%><CENTER><H1>ORB Topology Display for \"$match2\" within the \"$registryname\"</H1></CENTER>\n<HR></TD><TD ALIGN=RIGHT><A HREF=\"http://roadnet.ucsd.edu/\"><IMG SRC=\"http://roadnet.ucsd.edu/images/sub-sidebar_r13_c1.jpg\" WIDTH=156 HEIGHT=103 BORDER=0></A></TD></TR></TABLE>";
}
else
{
    print "<TABLE WIDTH=100%><TR><TD WIDTH=100%><CENTER><H1>ORB Topology Display for the \"$registryname\"</H1></CENTER>\n<HR></TD><TD ALIGN=RIGHT><A HREF=\"http://roadnet.ucsd.edu/\"><IMG SRC=\"http://roadnet.ucsd.edu/images/sub-sidebar_r13_c1.jpg\" WIDTH=156 HEIGHT=103 BORDER=0></A></TD></TR></TABLE>";
}
#print "<a href=\"/$web_tempdir_relative/orbtopo.$$.cmapx\">";
print "<img src=\"/$web_tempdir_relative/orbtopo.$$.png\" border=0 usemap=\"#orbtopo\" ismap>\n$map\n";
print "<FORM METHOD=GET ACTION=orbtopo.cgi>Highlight data matching regex: <INPUT TYPE=TEXT NAME=match VALUE=\"$match2\"><INPUT TYPE=HIDDEN NAME=registrydb VALUE=\"$registrydb_extern\"</FORM>";

#unlink("/tmp/orbtopo.$$.dot");

print "<BR>\n<BR>\n<FONT SIZE=-1>&lt<A HREF=\"orbtopo.cgi\">Orbtopo Home</A>&gt &lt<A HREF=\"\http://roadnet.ucsd.edu/\">ROADNet Home</A>&gt</FONT><BR><BR><FONT SIZE=-2><A HREF=\"tmp/orbtopo.$$.dot\">Orbtop map description</A></FONT>\n";
print "</BODY></HTML>\n";
