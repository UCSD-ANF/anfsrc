.TH HFRADAR2ORB 1 "$Date: 2006/07/17 23:16:40 $"
.SH NAME
hfradar2orb\- Load high-frequency radar files onto an Antelope orbserver
.SH SYNOPSIS
.nf
\fBhfradar2orb \fP[-v] [-n] [-p \fIpffile\fP] [-S \fIstatefile\fP] 
		[-i \fIinterval_sec\fP] [-m \fImintime\fP] [-m \fIlockfile\fP]
		\fInet\fP \fI[[user@]ipaddress:]basedir\fP \fIorbname\fP
.fi
.SH DESCRIPTION

\fBhfradar2orb\fP reads a directory of files of hfradar data (the 
\fIbasedir\fP argument on the command line), encapsulates each file
as an orb packet, and puts the packet on the orbserver specified by
\fIorbname\fP. The directory \fIbasedir\fP is assumed to be an
intake directory for these files, with copies that are disposable after use.

The \fInet\fP name will be incorporated into the orb-packet source names 
as the network name for the data. 

If the basedir directory is preceded by an internet address and colon
(optionally with a username and '@' sign given in front of the address), 
files are accessed via ssh(1) and scp(1)
commands to a remote server.  This presumes that the ssh connection has been 
set up for password-less access [shared-key authentication], as described in ssh_setup(5). If the intake-directory is a local pathname, 
by default \fBhfradar2orb\fP removes the copies from the intake directory 
after cloning them to the orbserver. If the intake directory is remote, 
i.e. accessed via ssh, no attempt is made to remove 
files once they are retrieved. 

\fBhfradar2orb\fP searches for each filename pattern specified in
its parameter file, looking for files that match the corresponding perl match
expression. The site name, beam pattern, and timestamp for each file is expected
to be encoded somehow in the file name. The parameter-file block for each 
pattern gives short segments of perl code which are used to parse the
site-name, beampattern, and Unix epoch time out of the filenames. These should
be filled in as the variables $site, $beampattern, and $timestamp, respectively,
by the perl code from the \fBhfradar2orb\fP.pf parameter file. The segments 
of perl code may operate on the variable $dfile, which contains the filename to be 
parsed. If these parsing steps fail, the file is skipped. Each file is analyzed 
using the routines in the \fIcodartools.pm\fP module (see 
\fIcodartools\fP(3P). If an input file is in 
CODAR Range-bin format, \fIhfradar2orb\fP attempts to convert it to  CODAR LLUV 
format with the \fIcodartools::rb2lluv(3P)\fP routine. 
The output format code used by \fBhfradar2orb\fP must be specified in 
hfradar2orb_pm.pf, as documented in the man page for \fBhfradar2orb\fP(3). 
The hfradar2orb_pm.pf parameter file also specifies the version number for the
orb-encoding to be used by \fBhfradar2orb\fP.

In an Antelope real-time system, \fBhfradar2orb\fP is intended to be run periodically 
out of the cron table of the rtexec(1) parameter file.

If the parameter \fItoo_new\fP is specified, packets newer then the system clock
plus the parameter value are skipped. This value may either be a bare number 
of seconds, or any string interpretable by str2epoch(3), e.g. "72:00" for 
72 hours or three days. If this parameter is left blank, no checking is done.
.SH OPTIONS
.IP -v
Verbose
.IP -n
Do not remove processed files; leave them in place. The default is to
remove files after they have been put on the orbserver. [In ssh-access 
mode, files are never removed from the remote server. In the ssh-access case, 
the -n option will instead prevent local copies of the transferred files 
from being removed from the tmp directory. This is a troubleshooting feature 
not intended for normal operation]. 
.IP "-p pffile"
Specify alternate parameter-file name. The default is \fBhfradar2orb\fP.pf
.IP "-i interval_sec"
Wait-time between packets. If this parameter is specified, \fBhfradar2orb\fP
waits the given number of seconds (or fractions thereof) between loading
each packet onto the orbserver. This can help reduce the load when transferring
huge volumes of files. This option should be needed only in rare special
circumstances.
.IP "-m mintime"
Minimum time for files. Files earlier than this time will be rejected.
.IP "-S statefile"
Use the specified filename to track the timestamps of acquired files such 
that files are not reprocessed. This allows old files to be retained in
the intake directory (especially useful for remote-access via ssh), without
the wasted overhead of continually reprocessing them. See caveats below. 
.IP "-l \fIlockfile\fP"
Specify a lock file, for coordination amongst multiple instances of
\fBhfradar2orb\fP.
.SH PARAMETER FILE
.in 2c
.ft CW
.nf

too_new  72:00

output_format hfrss10lluv

patterns &Tbl{
        &Arr{
                match           ^Rad[sz][a-zA-Z0-9]+_\\\\d\\\\d[-_]\\\\d\\\\d[-_]\\\\d\\\\d[-_]\\\\d\\\\d\\\\d\\\\d$
                site            &Literal{
                        $site = ($dfile =~ /^Rad.([a-zA-Z0-9]+)_/)[0];
                        $site = uc( $site );
                }
                timestamp       &Literal{
                        @mdyhms =
                           (($dfile =~ /(\\d\\d)[-_](\\d\\d)[-_](\\d\\d)[-_](\\d\\d)(\\d\\d)/)[1,2,0,3,4],0);
                        $timestamp = str2epoch( sprintf( "%s/%s/%s %s:%s:%s", @mdyhms ) );
                }
                beampattern     &Literal{
                        $beampattern = ($dfile =~ /^Rad([sz])/)[0];
                }
        }
        &Arr{
                match           ^Rad[sz][a-zA-Z0-9]+_\\\\d\\\\d[-_]\\\\d\\\\d[-_]\\\\d\\\\d[-_]\\\\d\\\\d\\\\d\\\\d(.rv)?$
                site            &Literal{
                        $site = ($dfile =~ /^Rad.([a-zA-Z0-9]+)_/)[0];
                        $site = uc( $site );
                }
                timestamp       &Literal{
                        @mdyhms =
                           (($dfile =~ /(\\d\\d)[-_](\\d\\d)[-_](\\d\\d)[-_](\\d\\d)(\\d\\d)/)[1,2,0,3,4],0);
                        $timestamp = str2epoch( sprintf( "%s/%s/%s %s:%s:%s", @mdyhms ) );
                }
                beampattern     &Literal{
                        $beampattern = ($dfile =~ /^Rad([sz])/)[0];
                }
        }
}

.fi
.ft R
.in
.SH EXAMPLE
.in 2c
.ft CW
.nf
The following is an example of access to files in a local intake directory:

%\fB ./hfradar2orb -v ANET /scr/month/stuff :\fP
 ./hfradar2orb: Starting at 11/02/04 16:11:09.379 AKST
 ./hfradar2orb: Processing files in /scr/month/stuff/hfrss4 matching /^Rad[sz][a-zA-Z0-9]+_\\d\\d[-_]\\d\\d[-_]\\d\\d[-_]\\d\\d\\d\\d$/
 ./hfradar2orb: Processing Radsmgs1_04_10_24_0800, timestamped 10/24/04 00:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_0800
 ./hfradar2orb: Processing Radsmgs1_04_10_24_0900, timestamped 10/24/04 01:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_0900
 ./hfradar2orb: Processing Radsmgs1_04_10_24_1000, timestamped 10/24/04 02:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_1000
 ./hfradar2orb: Processing Radsmgs1_04_10_24_1100, timestamped 10/24/04 03:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_1100
 ./hfradar2orb: Processing Radsmgs1_04_10_24_1200, timestamped 10/24/04 04:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_1200
 ./hfradar2orb: Processing Radsmgs1_04_10_24_1300, timestamped 10/24/04 05:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_1300
 ./hfradar2orb: Processing Radsmgs1_04_10_24_1400, timestamped 10/24/04 06:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_1400
 ./hfradar2orb: Processing Radsmgs1_04_10_24_1500, timestamped 10/24/04 07:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_1500
 ./hfradar2orb: Processing Radsmgs1_04_10_24_1600, timestamped 10/24/04 08:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_1600
 ./hfradar2orb: Processing Radsmgs1_04_10_24_1700, timestamped 10/24/04 09:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss4/Radsmgs1_04_10_24_1700
 ./hfradar2orb: Processing files in /scr/month/stuff/hfrss10rb matching /^Rad[sz][a-zA-Z0-9]+_\\d\\d[-_]\\d\\d[-_]\\d\\d[-_]\\d\\d\\d\\d(.rv)?$/
 ./hfradar2orb: Processing RadsBLCK_04_10_25_1800.rv, timestamped 10/25/04 10:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_25_1800.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_25_1900.rv, timestamped 10/25/04 11:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_25_1900.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_25_2000.rv, timestamped 10/25/04 12:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_25_2000.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_25_2100.rv, timestamped 10/25/04 13:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_25_2100.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_25_2200.rv, timestamped 10/25/04 14:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_25_2200.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_25_2300.rv, timestamped 10/25/04 15:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_25_2300.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_26_0100.rv, timestamped 10/25/04 17:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_26_0100.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_26_0200.rv, timestamped 10/25/04 18:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_26_0200.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_26_0300.rv, timestamped 10/25/04 19:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_26_0300.rv
 ./hfradar2orb: Processing RadsBLCK_04_10_26_0400.rv, timestamped 10/25/04 20:00:00.000 AKDT
 ./hfradar2orb:  Removing file /scr/month/stuff/hfrss10rb/RadsBLCK_04_10_26_0400.rv
 ./hfradar2orb: Ending at 11/02/04 16:11:09.484 AKST
%\fB \fP


The following is an example of files via an ssh connection:

%\fB hfradar2orb -v ANET kent@132.239.127.181:/Codar/SeaSonde/Data/Radials :\fP
 ./hfradar2orb: Starting at  9/09/05 17:01:23.233 AKDT
 ./hfradar2orb: Retrieving files via ssh to kent@132.239.127.181
 ./hfradar2orb: Rejecting packets that are more than 3 days in the future
 ./hfradar2orb: Processing files in kent@132.239.127.181:/Codar/SeaSonde/Data/Radials/. matching /^Rad[sz][a-zA-Z0-9]+_\\d\\d[-_]\\d\\d[-_]\\d\\d[-_]\\d\\d\\d\\d(.rv)?$/
 ./hfradar2orb: Retrieving file listing from kent@132.239.127.181:/Codar/SeaSonde/Data/Radials/. via ssh...
 ./hfradar2orb: Processing RadsSDBP_05-09-09_2000.rv, timestamped  9/09/05 12:00:00.000 AKDT
RadsSDBP_05-09-09_2000.rv                     100%   21KB   0.0KB/s   00:00    
 ./hfradar2orb: Processing RadsSDBP_05-09-09_2100.rv, timestamped  9/09/05 13:00:00.000 AKDT
RadsSDBP_05-09-09_2100.rv                     100%   20KB  19.0KB/s   00:01    
 ./hfradar2orb: Processing RadsSDBP_05-09-09_2200.rv, timestamped  9/09/05 14:00:00.000 AKDT
RadsSDBP_05-09-09_2200.rv                     100%   21KB  20.8KB/s   00:01    
 ./hfradar2orb: Processing RadsSDBP_05-09-09_2300.rv, timestamped  9/09/05 15:00:00.000 AKDT
RadsSDBP_05-09-09_2300.rv                     100%   21KB  20.6KB/s   00:01    
 ./hfradar2orb: Processing RadsSDBP_05-09-10_0000.rv, timestamped  9/09/05 16:00:00.000 AKDT
RadsSDBP_05-09-10_0000.rv                     100%   20KB   0.0KB/s   00:00    
 ./hfradar2orb: Ending at  9/09/05 17:01:50.323 AKDT
% 

The parameter file for the above ssh-access run was:

% cat hfradar2orb.pf
too_new 72:00

subdirs &Tbl{
        &Arr{
                subdir          .
                format          hfrss10rb
                match           ^Rad[sz][a-zA-Z0-9]+_\\\\d\\\\d[-_]\\\\d\\\\d[-_]\\\\d\\\\d[-_]\\\\d\\\\d\\\\d\\\\d(.rv)?$
                site            &Literal{
                        $site = ($dfile =~ /^Rad.([a-zA-Z0-9]+)_/)[0];
                        $site = uc( $site );
                }
                timestamp       &Literal{
                        @mdyhms =
                           (($dfile =~ /(\\d\\d)[-_](\\d\\d)[-_](\\d\\d)[-_](\\d\\d)(\\d\\d)/)[1,2,0,3,4],0);
                        $timestamp = str2epoch( sprintf( "%s/%s/%s %s:%s:%s", @mdyhms ) );
                }
                beampattern     &Literal{
                        $beampattern = ($dfile =~ /^Rad([sz])/)[0];
                }
        }
}
% 


.fi
.ft R
.in
.SH "SEE ALSO"
.nf
hfradar2orb(3), orb2codar(1), ssh_setup(5)
.fi
.SH "BUGS AND CAVEATS"
Currently, no record is kept in the orb packets of the originating filename, 
although all necessary source information should be present. The file
hierarchy may be recreated on the receiving end through proper
configuration of the orb2codar(1) program.

If ssh-based access is attempted without proper setup of shared-key
authentication, \fBhfradar2orb\fP will prompt for a password at each ssh-mediated
transaction. This was not the intent of the program design, however should 
work and may in fact be desirable in some test or manual-operation cases. 

If a statefile is used to track file acquisition, only one subdirectory
may be acquired by a single instance of hfradar2orb (\fBhfradar2orb\fP 
presumes the operator has set this up correctly).  All tracking is done via
the time information embedded in the filenames; files must appear in
time-order or they will be ignored. 
.SH AUTHOR
.nf
Kent Lindquist
Lindquist Consulting
.fi
.\" $Id: hfradar2orb.1,v 1.8 2006/07/17 23:16:40 lindquis Exp $
